name: Main workflow

on: push

jobs:

  lint-flake:
    name: Lint with flake8
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - if: steps.python-cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - run: flake8 src

  prepare-data:
    name: Prepare (pull, process) data
    runs-on: ubuntu-latest
    needs: lint-flake

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: actions/cache@v3
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
      - if: steps.python-cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - uses: actions/cache@v3
        id: huggingface-cache
        with:
          path: ~/.cache/huggingface
          key: huggingface-cache

      - run: |
          python src/pull_data.py
          python src/process_data.py

      - uses: actions/upload-artifact@v3
        with:
          name: huggingface-data
          path: data

  pre-train-model:
    name: Pre train model
    runs-on: ubuntu-latest
    needs: prepare-data
    if: false

    strategy:
      matrix:
        model_name: [distilbert, albert]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: actions/cache@v3
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
#      - if: steps.python-cache.outputs.cache-hit != 'true'
#        run: pip install -r requirements.txt

      - uses: actions/cache@v3
        id: huggingface-cache
        with:
          path: ~/.cache/huggingface
          key: huggingface-cache
      - uses: actions/download-artifact@v3
        with:
          name: huggingface-data
          path: data

      - run: |
          echo ${{ matrix.model_name }}
          python src/train_model.py

      - uses: actions/upload-artifact@v3
        with:
          name: huggingface-pre-trained-models
          path: models
      - name: push model
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
        run: |
          huggingface-cli login --token $HUGGINGFACE_TOKEN

  fine-tune-model:
    name: Fine-tune model
    runs-on: ubuntu-latest
    needs: pre-train-model
    if: true

    strategy:
      matrix:
        model_name: [ distilbert, albert ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - uses: actions/cache@v3
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
#      - if: steps.python-cache.outputs.cache-hit != 'true'
#        run: pip install -r requirements.txt

      - uses: actions/cache@v3
        id: huggingface-cache
        with:
          path: ~/.cache/huggingface
          key: huggingface-cache
      - uses: actions/download-artifact@v3
        with:
          name: huggingface-data
          path: data
      - uses: actions/download-artifact@v3
        with:
          name: huggingface-pre-trained-models
          path: models

      - run: |
          echo ${{ matrix.model_name }}
          python src/train_model.py

      - uses: actions/upload-artifact@v3
        with:
          name: huggingface-fine-tuned-models
          path: models

      - name: push model
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
        run: |
          huggingface-cli login --token $HUGGINGFACE_TOKEN
